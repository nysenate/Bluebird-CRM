<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from uk.co.vedaconsulting.mosaico/xml/schema/CRM/Mosaico/MessageTemplate.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:295340b4f197a752729e0cbd22579979)
 */
use CRM_Mosaico_ExtensionUtil as E;

/**
 * Database access object for the MessageTemplate entity.
 */
class CRM_Mosaico_DAO_MessageTemplate extends CRM_Core_DAO {
  const EXT = E::LONG_NAME;
  const TABLE_ADDED = '';

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'civicrm_mosaico_msg_template';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = TRUE;

  /**
   * Unique Settings ID
   *
   * @var int
   */
  public $id;

  /**
   * FK to civicrm_msg_template.
   *
   * @var int
   */
  public $msg_tpl_id;

  /**
   * @var string
   */
  public $hash_key;

  /**
   * name
   *
   * @var string
   */
  public $name;

  /**
   * HTML
   *
   * @var longtext
   */
  public $html;

  /**
   * metadata
   *
   * @var longtext
   */
  public $metadata;

  /**
   * template
   *
   * @var longtext
   */
  public $template;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'civicrm_mosaico_msg_template';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   *
   * @param bool $plural
   *   Whether to return the plural version of the title.
   */
  public static function getEntityTitle($plural = FALSE) {
    return $plural ? E::ts('Mosaico Message Templates') : E::ts('Mosaico Message Template');
  }

  /**
   * Returns foreign keys and entity references.
   *
   * @return array
   *   [CRM_Core_Reference_Interface]
   */
  public static function getReferenceColumns() {
    if (!isset(Civi::$statics[__CLASS__]['links'])) {
      Civi::$statics[__CLASS__]['links'] = static::createReferenceColumns(__CLASS__);
      Civi::$statics[__CLASS__]['links'][] = new CRM_Core_Reference_Basic(self::getTableName(), 'msg_tpl_id', 'civicrm_msg_template', 'id');
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'links_callback', Civi::$statics[__CLASS__]['links']);
    }
    return Civi::$statics[__CLASS__]['links'];
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'description' => E::ts('Unique Settings ID'),
          'required' => TRUE,
          'where' => 'civicrm_mosaico_msg_template.id',
          'table_name' => 'civicrm_mosaico_msg_template',
          'entity' => 'MessageTemplate',
          'bao' => 'CRM_Mosaico_DAO_MessageTemplate',
          'localizable' => 0,
          'readonly' => TRUE,
          'add' => NULL,
        ],
        'msg_tpl_id' => [
          'name' => 'msg_tpl_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('message template ID'),
          'description' => E::ts('FK to civicrm_msg_template.'),
          'required' => TRUE,
          'where' => 'civicrm_mosaico_msg_template.msg_tpl_id',
          'table_name' => 'civicrm_mosaico_msg_template',
          'entity' => 'MessageTemplate',
          'bao' => 'CRM_Mosaico_DAO_MessageTemplate',
          'localizable' => 0,
          'FKClassName' => 'CRM_Core_DAO_MessageTemplate',
          'html' => [
            'type' => 'Select',
          ],
          'pseudoconstant' => [
            'table' => 'civicrm_msg_template',
            'keyColumn' => 'id',
            'labelColumn' => 'msg_title',
          ],
          'add' => NULL,
        ],
        'hash_key' => [
          'name' => 'hash_key',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('hash_key'),
          'required' => TRUE,
          'maxlength' => 32,
          'size' => CRM_Utils_Type::MEDIUM,
          'where' => 'civicrm_mosaico_msg_template.hash_key',
          'table_name' => 'civicrm_mosaico_msg_template',
          'entity' => 'MessageTemplate',
          'bao' => 'CRM_Mosaico_DAO_MessageTemplate',
          'localizable' => 0,
          'add' => NULL,
        ],
        'name' => [
          'name' => 'name',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('name'),
          'description' => E::ts('name'),
          'required' => TRUE,
          'maxlength' => 32,
          'size' => CRM_Utils_Type::MEDIUM,
          'where' => 'civicrm_mosaico_msg_template.name',
          'table_name' => 'civicrm_mosaico_msg_template',
          'entity' => 'MessageTemplate',
          'bao' => 'CRM_Mosaico_DAO_MessageTemplate',
          'localizable' => 0,
          'add' => NULL,
        ],
        'html' => [
          'name' => 'html',
          'type' => CRM_Utils_Type::T_LONGTEXT,
          'title' => E::ts('HTML'),
          'description' => E::ts('HTML'),
          'required' => TRUE,
          'where' => 'civicrm_mosaico_msg_template.html',
          'table_name' => 'civicrm_mosaico_msg_template',
          'entity' => 'MessageTemplate',
          'bao' => 'CRM_Mosaico_DAO_MessageTemplate',
          'localizable' => 0,
          'html' => [
            'type' => 'RichTextEditor',
          ],
          'add' => NULL,
        ],
        'metadata' => [
          'name' => 'metadata',
          'type' => CRM_Utils_Type::T_LONGTEXT,
          'title' => E::ts('metadata'),
          'description' => E::ts('metadata'),
          'required' => TRUE,
          'where' => 'civicrm_mosaico_msg_template.metadata',
          'table_name' => 'civicrm_mosaico_msg_template',
          'entity' => 'MessageTemplate',
          'bao' => 'CRM_Mosaico_DAO_MessageTemplate',
          'localizable' => 0,
          'html' => [
            'type' => 'RichTextEditor',
          ],
          'add' => NULL,
        ],
        'template' => [
          'name' => 'template',
          'type' => CRM_Utils_Type::T_LONGTEXT,
          'title' => E::ts('template'),
          'description' => E::ts('template'),
          'required' => TRUE,
          'where' => 'civicrm_mosaico_msg_template.template',
          'table_name' => 'civicrm_mosaico_msg_template',
          'entity' => 'MessageTemplate',
          'bao' => 'CRM_Mosaico_DAO_MessageTemplate',
          'localizable' => 0,
          'html' => [
            'type' => 'RichTextEditor',
          ],
          'add' => NULL,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return self::$_tableName;
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'mosaico_msg_template', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'mosaico_msg_template', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
